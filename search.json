[
  {
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "Dashboard Farmaci",
    "section": "",
    "text": "Questa dashboard mostra lâ€™analisi del consumo di farmaci in Italia dal 2016 al 2023.\n\nlibrary(readxl)\nlibrary(tidyverse)\n\nâ”€â”€ Attaching core tidyverse packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 2.0.0 â”€â”€\nâœ” dplyr     1.1.4     âœ” readr     2.1.5\nâœ” forcats   1.0.0     âœ” stringr   1.5.1\nâœ” ggplot2   3.5.2     âœ” tibble    3.3.0\nâœ” lubridate 1.9.4     âœ” tidyr     1.3.1\nâœ” purrr     1.1.0     \nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\nâœ– dplyr::filter() masks stats::filter()\nâœ– dplyr::lag()    masks stats::lag()\nâ„¹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(DT)\nlibrary(plotly)\n\n\nCaricamento pacchetto: 'plotly'\n\nIl seguente oggetto Ã¨ mascherato da 'package:ggplot2':\n\n    last_plot\n\nIl seguente oggetto Ã¨ mascherato da 'package:stats':\n\n    filter\n\nIl seguente oggetto Ã¨ mascherato da 'package:graphics':\n\n    layout\n\nlibrary(prophet)\n\nCaricamento del pacchetto richiesto: Rcpp\nCaricamento del pacchetto richiesto: rlang\n\nCaricamento pacchetto: 'rlang'\n\nI seguenti oggetti sono mascherati da 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\n# Lettura file Excel\ndati &lt;- read_excel(\"consumo_farmaci.xlsx\")\n\n# Pulizia colonna spesa_totale\ndati &lt;- dati %&gt;%\n  mutate(spesa_totale = readr::parse_number(as.character(spesa_totale)))"
  },
  {
    "objectID": "dashboard.html#introduzione",
    "href": "dashboard.html#introduzione",
    "title": "Dashboard Farmaci",
    "section": "",
    "text": "Questa dashboard mostra lâ€™analisi del consumo di farmaci in Italia dal 2016 al 2023.\n\nlibrary(readxl)\nlibrary(tidyverse)\n\nâ”€â”€ Attaching core tidyverse packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 2.0.0 â”€â”€\nâœ” dplyr     1.1.4     âœ” readr     2.1.5\nâœ” forcats   1.0.0     âœ” stringr   1.5.1\nâœ” ggplot2   3.5.2     âœ” tibble    3.3.0\nâœ” lubridate 1.9.4     âœ” tidyr     1.3.1\nâœ” purrr     1.1.0     \nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\nâœ– dplyr::filter() masks stats::filter()\nâœ– dplyr::lag()    masks stats::lag()\nâ„¹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(DT)\nlibrary(plotly)\n\n\nCaricamento pacchetto: 'plotly'\n\nIl seguente oggetto Ã¨ mascherato da 'package:ggplot2':\n\n    last_plot\n\nIl seguente oggetto Ã¨ mascherato da 'package:stats':\n\n    filter\n\nIl seguente oggetto Ã¨ mascherato da 'package:graphics':\n\n    layout\n\nlibrary(prophet)\n\nCaricamento del pacchetto richiesto: Rcpp\nCaricamento del pacchetto richiesto: rlang\n\nCaricamento pacchetto: 'rlang'\n\nI seguenti oggetti sono mascherati da 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n\n# Lettura file Excel\ndati &lt;- read_excel(\"consumo_farmaci.xlsx\")\n\n# Pulizia colonna spesa_totale\ndati &lt;- dati %&gt;%\n  mutate(spesa_totale = readr::parse_number(as.character(spesa_totale)))"
  },
  {
    "objectID": "dashboard.html#render-e-visualizzazione",
    "href": "dashboard.html#render-e-visualizzazione",
    "title": "Dashboard Consumo Farmaci",
    "section": "ðŸ”¹ 6. Render e visualizzazione",
    "text": "ðŸ”¹ 6. Render e visualizzazione\n\nSalva il file dashboard.qmd\nClicca su Render in alto a destra in RStudio\nVerrÃ  generata una pagina HTML con grafici e tabelle"
  },
  {
    "objectID": "Nuova cartella.html",
    "href": "Nuova cartella.html",
    "title": "DashboarAifa",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Nuova cartella.html#quarto",
    "href": "Nuova cartella.html#quarto",
    "title": "DashboarAifa",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "dashboard.html#tabella-interattiva",
    "href": "dashboard.html#tabella-interattiva",
    "title": "Dashboard Farmaci",
    "section": "Tabella interattiva",
    "text": "Tabella interattiva\n\ndatatable(dati, options = list(pageLength = 10))"
  },
  {
    "objectID": "dashboard.html#spesa-totale-per-categoria-atc",
    "href": "dashboard.html#spesa-totale-per-categoria-atc",
    "title": "Dashboard Farmaci",
    "section": "Spesa totale per categoria ATC",
    "text": "Spesa totale per categoria ATC\n\nggplot(dati, aes(x = atc1, y = spesa_totale, fill = atc1)) +\n  geom_boxplot() +\n  labs(title = \"Distribuzione della spesa per categoria ATC\",\n       x = \"Categoria ATC\",\n       y = \"Spesa (â‚¬)\") +\n  theme_minimal()"
  },
  {
    "objectID": "dashboard.html#spesa-media-per-descrizione-atc",
    "href": "dashboard.html#spesa-media-per-descrizione-atc",
    "title": "Dashboard Farmaci",
    "section": "Spesa media per descrizione ATC",
    "text": "Spesa media per descrizione ATC\n\ndati %&gt;%\n  group_by(descrizione_atc1) %&gt;%\n  summarise(spesa_media = mean(spesa_totale, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = reorder(descrizione_atc1, spesa_media), y = spesa_media)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Spesa media per classe terapeutica\",\n       x = \"Classe ATC\",\n       y = \"Spesa media (â‚¬)\") +\n  theme_minimal()"
  },
  {
    "objectID": "dashboard.html#confronto-prepost-covid",
    "href": "dashboard.html#confronto-prepost-covid",
    "title": "Dashboard Farmaci",
    "section": "Confronto Pre/Post COVID",
    "text": "Confronto Pre/Post COVID\n\ndati %&gt;%\n  mutate(periodo = if_else(anno &lt; 2020, \"Pre-COVID\", \"Post-COVID\")) %&gt;%\n  group_by(periodo, atc1) %&gt;%\n  summarise(spesa_media = mean(spesa_totale, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = atc1, y = spesa_media, fill = periodo)) +\n  geom_col(position = \"dodge\") +\n  labs(title = \"Confronto spesa media Pre vs Post COVID per categoria ATC\",\n       x = \"Categoria ATC\",\n       y = \"Spesa media (â‚¬)\") +\n  theme_minimal()\n\n`summarise()` has grouped output by 'periodo'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "dashboard.html#spesa-totale-per-regione",
    "href": "dashboard.html#spesa-totale-per-regione",
    "title": "Dashboard Farmaci",
    "section": "Spesa totale per regione",
    "text": "Spesa totale per regione\n\ndati %&gt;%\n  group_by(regione) %&gt;%\n  summarise(spesa_totale = sum(spesa_totale, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = reorder(regione, spesa_totale), y = spesa_totale)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Spesa totale per regione\",\n       x = \"Regione\",\n       y = \"Spesa (â‚¬)\") +\n  theme_minimal()"
  },
  {
    "objectID": "dashboard.html#previsione-con-prophet",
    "href": "dashboard.html#previsione-con-prophet",
    "title": "Dashboard Farmaci",
    "section": "Previsione con Prophet",
    "text": "Previsione con Prophet\n\ndati_prophet &lt;- dati %&gt;%\n  group_by(anno) %&gt;%\n  summarise(spesa = sum(spesa_totale, na.rm = TRUE)) %&gt;%\n  mutate(ds = as.Date(paste0(anno, \"-01-01\")),\n         y = spesa) %&gt;%\n  select(ds, y)\n\nmodello &lt;- prophet(dati_prophet)\n\nDisabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this.\n\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\n\nn.changepoints greater than number of observations. Using 5\n\nfuture &lt;- make_future_dataframe(modello, periods = 3, freq = \"year\")\nforecast &lt;- predict(modello, future)\n\nplot(modello, forecast) +\n  ggtitle(\"Previsione spesa farmaci con Prophet\")"
  }
]